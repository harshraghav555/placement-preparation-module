DAY 20
SOL 1
longest substring without erepeating character-                                  class Solution {
public:
    int lengthOfLongestSubstring(string s) {
   //approach sliding window optimized futher optimized
        int n=s.size();
        vector<int > position(128,-1);
        int ans=0;
        for(int i=0, j=0; j<n; j++)
        {
            if(position[s[j]]!=-1)
            {
                i=max(i,position[s[j]]+1);
            }
        ans=max(ans,j-i+1);
        position[s[j]]=j;
        }
        return ans;
        
    }
}; 
SOL 2
permutation string- class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        if(s1.size()>s2.size())
            return false;
            vector<int>f1(26,0),f2(26,0);
       for(char c:s1)  f1[c-'a']++;
        int k=s1.size();
        
        for(int i=0; i<k-1; i++)
            f2[s2[i]-'a']++;
        
        for(int i=k-1; i<s2.size(); i++)
        {
        f2[s2[i]-'a']++;
        if(f1==f2)
            return true;
            f2[s2[i-(k-1)]-'a']--;
        }
        return false;
    }
};