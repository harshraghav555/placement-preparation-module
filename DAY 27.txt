DAY 27
SOL 1

  class Solution {
public:
    bool isPowerOfTwo(int i) {
        // 1st solution  
         return i>0 && not (i& i-1);
      
        // 2nd solution 
        /*if(n==0)
            return false;
        while(n%2==0)
            n/=2;
        return n==1;*/
    }
};
SOL 2
public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        int pivot = 1;
        int sum = 0;
        for (int i = 0; i < 32; i ++){
            int p = pivot << i;
            if ((n & p) == p)
                sum ++;
        }
        return sum;
    }
}
